import groovy.json.JsonOutput
import groovy.json.JsonSlurper

class CVESearch {
    static void main(String[] args){

        def repositoryUrl = args[0]
        def policyId = args[1]
        def cve = args[2]

        def endpoint = repositoryUrl + '/api/v2/policyViolations'
        def query = '?p=' + policyId
        def repoAddress = endpoint + query

        def url = new URL(repoAddress)
        def violationsConnection = url.openConnection()

        violationsConnection.requestMethod = 'GET'
        violationsConnection.setRequestProperty("Authorization", "Basic YWRtaW46YWRtaW4xMjM=")

        if (violationsConnection.responseCode == 200) {
            def violationsContent = violationsConnection.content.text

            def jsonSlurper = new JsonSlurper()
            def violationsJsonObject = jsonSlurper.parseText(violationsContent)

            violationsJsonObject.applicationViolations.each {

                String currentApplicationName = it.application.name
                String currentApplicationId = it.application.id

                println ''
                println 'Application: ' + currentApplicationName

                it.policyViolations.each {

                    String threatLevel = it.threatLevel
                    String stageId = it.stageId
                    String policyName = it.policyName

                    String format = it.component.componentIdentifier.format
                    Boolean proprietary = it.component.proprietary

                    if (format.equals('maven')){

                        Object coordinates = it.component.componentIdentifier.coordinates
                        Object coordinatesJson = JsonOutput.toJson(coordinates)

                        it.constraintViolations.reasons.each {
                            String reason = it

                            if (reason.contains(cve)){
                                println JsonOutput.prettyPrint(JsonOutput.toJson(coordinatesJson))
                                println '-> ' + reason
                            }
                        }
                    }
                }
            }
        }
    }
}
