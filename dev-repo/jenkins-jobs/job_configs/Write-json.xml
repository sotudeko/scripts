<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.33">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.73">
    <script>// import groovy.json.JsonOutput

pipeline {
    agent any 
    stages {
        stage(&apos;build&apos;) {
            steps {
                echo &apos;Hello World&apos;
            }
        }
        stage(&apos;json file&apos;) {
            steps {
                script {
                    def tagdata = readJSON text: &apos;{}&apos;
                    echo &apos;Hello World&apos;
                    tagdata.a = &quot;test: exam&quot; as String
                    writeJSON(file: &apos;message1.json&apos;, json: tagdata, pretty: 4)
                    rtp parserName: &apos;HTML&apos;, stableText: &apos;It worked&apos;
                //     rtp parserName: &apos;WikiText&apos;, stableText: &apos;Repository tag&apos;
                    
                //     publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: &apos;.&apos;, reportFiles: &apos;index.html&apos;, reportName: &apos;HTML Report&apos;, reportTitles: &apos;Repository Report&apos;])
                }
                
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>